name: CMake

on: [push, workflow_dispatch]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: ubuntu-18.04
    
    strategy:
      matrix:
        build_type: [Release, Debug]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: |
        sudo apt-get install valgrind
        cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE/src -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config ${{ matrix.build_type }}
    
    - name: Test with Valgrind
      working-directory: ${{runner.workspace}}/build
      shell: bash
      if: matrix.build_type == 'Debug'
      run: valgrind --leak-check=full --error-exitcode=1 --track-origins=yes ./lhstest/lhstest

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      if: matrix.build_type == 'Release'
      run: ./lhstest/lhstest
